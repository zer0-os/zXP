# We use the environment level to validate against certain requirements
ENV_LEVEL="dev" | "test" | "prod"

# Private key of the account Hardhat will use
PRIVATE_KEY=

# Set this for Mainnet
MAINNET_RPC_URL=
# Set this for Sepolia
SEPOLIA_RPC_URL=

# ENV vars for MongoDB, for local development you can use below
MONGO_DB_URI="mongodb://localhost:27018"
MONGO_DB_NAME="zns-campaign"
# Optional params for Mongo Client class specifically
MONGO_DB_CLIENT_OPTS=
# This is crucial based on the DB behaviour you want. MongoAdapter will create a new DB version if this is NOT passed
# and it will use existing version if specified. If you want to deploy from scratch, do not supply and the previous
# versioned data will be wiped out.
# If you wish to save the previous data and write a new version on top, look at the next ENV var.
MONGO_DB_VERSION=
# This is crucial to saving the data written in previous DB (DEPLOYED) version.
# If this is not passed or passed as "false", previous DB data will be wiped out.
# If you want to save the previous contract data in DB, set this to "true"!
ARCHIVE_PREVIOUS_DB_VERSION="true" | "false"

# ENV vars for Logger
LOG_LEVEL="debug" | "info" | "warn" | "error
# Removes logger output and does not write to file as well
SILENT_LOGGER="false" | "true"

# Boolean value for if we deploy the mock
# true = we deploy the mock
# false = we use a hard coded address and pull data from chain
MOCK_MEOW_TOKEN=
# Address of the MEOW Token deployed to the network PRIOR to running Campaign or any other EXISTING token
# This is only used if MOCK_MEOW_TOKEN is set to false (`test` and `prod` environments)
STAKING_TOKEN_ADDRESS=

# Environment variables to create an entirely custom config when `env_level` above is not dev
MAX_PRICE=
MIN_PRICE=
MAX_LENGTH=
BASE_LENGTH=

DECIMALS=
PRECISION=
PROTOCOL_FEE_PERC=

# Domain Token data
DOMAIN_TOKEN_NAME=
DOMAIN_TOKEN_SYMBOL=
ROYALTY_FRACTION=
ROYALTY_RECEIVER=

# Zero Vault is where all the Protocol Fees end up. Required to be set!
ZERO_VAULT_ADDRESS=

# base64 encoded value of a comma separated list of address e.g. "0x123,0x456" === "MHgxMjMsMHg0NTY="
GOVERNOR_ADDRESSES=
ADMIN_ADDRESSES=

# The deploy campaign will automatically verify and monitor contracts on testnets or mainnet, but not hardhat
# to turn off this flow for testing, set these values to "false" and "true" otherwise
MONITOR_CONTRACTS="false"
VERIFY_CONTRACTS="false"

DEFENDER_KEY=
DEFENDER_SECRET=
RELAYER_KEY=
RELAYER_SECRET=

# Tenderly
# this is your key to access Tenderly Zer0 Org
TENDERLY_ACCESS_KEY=
# This is the name of the project (e.g. "zns-sepolia-test") to which you want to push
TENDERLY_PROJECT_SLUG=
# Account ID of the Zer0 Org on Tenderly
TENDERLY_ACCOUNT_ID="zer0-os"

# Below are used only for the `deploy:devnet` script (for testing new logic) NOT RELATED TO THE DEPLOY CAMPAIGN !
TENDERLY_DEVNET_TEMPLATE="zns-devnet"
DEVNET_RPC_URL=